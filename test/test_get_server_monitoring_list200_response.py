# coding: utf-8

"""
    さくらのVPS APIドキュメント

    Sakura VPS API client written in Python (generated with openapi-generator)

    The version of the OpenAPI document: 4.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sakura_vps_client_py.models.get_server_monitoring_list200_response import GetServerMonitoringList200Response

class TestGetServerMonitoringList200Response(unittest.TestCase):
    """GetServerMonitoringList200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetServerMonitoringList200Response:
        """Test GetServerMonitoringList200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetServerMonitoringList200Response`
        """
        model = GetServerMonitoringList200Response()
        if include_optional:
            return GetServerMonitoringList200Response(
                count = 100,
                next = 'https://api.example.com/?page=3&per_page=10',
                previous = 'https://api.example.com/?per_page=10',
                results = [
                    sakura_vps_client_py.models.server_monitoring.ServerMonitoring(
                        id = 56, 
                        name = '', 
                        description = '', 
                        monitoring_resource_id = '', 
                        update_status = 'waiting', 
                        settings = sakura_vps_client_py.models.server_monitoring_settings.ServerMonitoring_settings(
                            enabled = True, 
                            health_check = sakura_vps_client_py.models.server_monitoring_settings_health_check.ServerMonitoring_settings_health_check(), 
                            notification = sakura_vps_client_py.models.server_monitoring_settings_notification.ServerMonitoring_settings_notification(
                                email = sakura_vps_client_py.models.server_monitoring_settings_notification_email.ServerMonitoring_settings_notification_email(
                                    enabled = True, ), 
                                incoming_webhook = sakura_vps_client_py.models.server_monitoring_settings_notification_incoming_webhook.ServerMonitoring_settings_notification_incoming_webhook(
                                    enabled = True, 
                                    webhooks_url = '0', 
                                    slack_team_name = '', 
                                    slack_channel_name = '', ), 
                                interval_hours = 1, ), ), )
                    ]
            )
        else:
            return GetServerMonitoringList200Response(
                count = 100,
                next = 'https://api.example.com/?page=3&per_page=10',
                previous = 'https://api.example.com/?per_page=10',
                results = [
                    sakura_vps_client_py.models.server_monitoring.ServerMonitoring(
                        id = 56, 
                        name = '', 
                        description = '', 
                        monitoring_resource_id = '', 
                        update_status = 'waiting', 
                        settings = sakura_vps_client_py.models.server_monitoring_settings.ServerMonitoring_settings(
                            enabled = True, 
                            health_check = sakura_vps_client_py.models.server_monitoring_settings_health_check.ServerMonitoring_settings_health_check(), 
                            notification = sakura_vps_client_py.models.server_monitoring_settings_notification.ServerMonitoring_settings_notification(
                                email = sakura_vps_client_py.models.server_monitoring_settings_notification_email.ServerMonitoring_settings_notification_email(
                                    enabled = True, ), 
                                incoming_webhook = sakura_vps_client_py.models.server_monitoring_settings_notification_incoming_webhook.ServerMonitoring_settings_notification_incoming_webhook(
                                    enabled = True, 
                                    webhooks_url = '0', 
                                    slack_team_name = '', 
                                    slack_channel_name = '', ), 
                                interval_hours = 1, ), ), )
                    ],
        )
        """

    def testGetServerMonitoringList200Response(self):
        """Test GetServerMonitoringList200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
