# coding: utf-8

"""
    さくらのVPS APIドキュメント

    Sakura VPS API client written in Python (generated with openapi-generator)

    The version of the OpenAPI document: 5.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sakura_vps_client_py.models.server_monitoring_settings import ServerMonitoringSettings

class TestServerMonitoringSettings(unittest.TestCase):
    """ServerMonitoringSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServerMonitoringSettings:
        """Test ServerMonitoringSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServerMonitoringSettings`
        """
        model = ServerMonitoringSettings()
        if include_optional:
            return ServerMonitoringSettings(
                enabled = True,
                health_check = sakura_vps_client_py.models.server_monitoring_settings_health_check.ServerMonitoring_settings_health_check(),
                notification = sakura_vps_client_py.models.server_monitoring_settings_notification.ServerMonitoring_settings_notification(
                    email = sakura_vps_client_py.models.server_monitoring_settings_notification_email.ServerMonitoring_settings_notification_email(
                        enabled = True, ), 
                    incoming_webhook = sakura_vps_client_py.models.server_monitoring_settings_notification_incoming_webhook.ServerMonitoring_settings_notification_incoming_webhook(
                        enabled = True, 
                        webhooks_url = '0', 
                        slack_team_name = '', 
                        slack_channel_name = '', ), 
                    interval_hours = 1, )
            )
        else:
            return ServerMonitoringSettings(
                enabled = True,
                health_check = sakura_vps_client_py.models.server_monitoring_settings_health_check.ServerMonitoring_settings_health_check(),
                notification = sakura_vps_client_py.models.server_monitoring_settings_notification.ServerMonitoring_settings_notification(
                    email = sakura_vps_client_py.models.server_monitoring_settings_notification_email.ServerMonitoring_settings_notification_email(
                        enabled = True, ), 
                    incoming_webhook = sakura_vps_client_py.models.server_monitoring_settings_notification_incoming_webhook.ServerMonitoring_settings_notification_incoming_webhook(
                        enabled = True, 
                        webhooks_url = '0', 
                        slack_team_name = '', 
                        slack_channel_name = '', ), 
                    interval_hours = 1, ),
        )
        """

    def testServerMonitoringSettings(self):
        """Test ServerMonitoringSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
